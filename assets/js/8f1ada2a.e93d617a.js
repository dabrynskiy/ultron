"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[501],{4878:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/ultron/docs/","docId":"index","unlisted":false},{"type":"category","label":"Getting started","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Connect to project","href":"/ultron/docs/intro/connect","docId":"intro/connect","unlisted":false},{"type":"link","label":"Dependencies Management","href":"/ultron/docs/intro/dependencies","docId":"intro/dependencies","unlisted":false},{"type":"link","label":"Configuration","href":"/ultron/docs/intro/configuration","docId":"intro/configuration","unlisted":false}]},{"type":"category","label":"Compose","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Multiplatform","href":"/ultron/docs/compose/multiplatform","docId":"compose/multiplatform","unlisted":false},{"type":"link","label":"Android","href":"/ultron/docs/compose/android","docId":"compose/android","unlisted":false},{"type":"link","label":"Ultron Compose API","href":"/ultron/docs/compose/api","docId":"compose/api","unlisted":false},{"type":"link","label":"LazyList","href":"/ultron/docs/compose/lazylist","docId":"compose/lazylist","unlisted":false}],"href":"/ultron/docs/compose/"},{"type":"category","label":"Android","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Espresso","href":"/ultron/docs/android/espress","docId":"android/espress","unlisted":false},{"type":"link","label":"WebView","href":"/ultron/docs/android/webview","docId":"android/webview","unlisted":false},{"type":"link","label":"RecyclerView","href":"/ultron/docs/android/recyclerview","docId":"android/recyclerview","unlisted":false},{"type":"link","label":"UI Automator","href":"/ultron/docs/android/uiautomator","docId":"android/uiautomator","unlisted":false},{"type":"link","label":"withSuitableRoot","href":"/ultron/docs/android/rootview","docId":"android/rootview","unlisted":false},{"type":"link","label":"Test Conditions Management","href":"/ultron/docs/android/testconditions","docId":"android/testconditions","unlisted":false}]},{"type":"category","label":"Common","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Allure","href":"/ultron/docs/common/allure","docId":"common/allure","unlisted":false},{"type":"link","label":"UI Block","href":"/ultron/docs/common/uiblock","docId":"common/uiblock","unlisted":false},{"type":"link","label":"UltronTest","href":"/ultron/docs/common/ultrontest","docId":"common/ultrontest","unlisted":false},{"type":"link","label":"Ultron Extension","href":"/ultron/docs/common/extension","docId":"common/extension","unlisted":false},{"type":"link","label":"Listeners","href":"/ultron/docs/common/listeners","docId":"common/listeners","unlisted":false},{"type":"link","label":"Boolean result","href":"/ultron/docs/common/boolean","docId":"common/boolean","unlisted":false},{"type":"link","label":"Custom assertions","href":"/ultron/docs/common/customassertion","docId":"common/customassertion","unlisted":false},{"type":"link","label":"Result handler","href":"/ultron/docs/common/resulthandler","docId":"common/resulthandler","unlisted":false}]}]},"docs":{"android/espress":{"id":"android/espress","title":"Espresso","description":"How to use?","sidebar":"tutorialSidebar"},"android/recyclerview":{"id":"android/recyclerview","title":"RecyclerView","description":"Terms","sidebar":"tutorialSidebar"},"android/rootview":{"id":"android/rootview","title":"withSuitableRoot","description":"Method allows to avoiding nontrivial element lookup exceptions","sidebar":"tutorialSidebar"},"android/testconditions":{"id":"android/testconditions","title":"Test Conditions Management","description":"It is a feature that includes 3 parts","sidebar":"tutorialSidebar"},"android/uiautomator":{"id":"android/uiautomator","title":"UI Automator","description":"Ultron makes UI Automator actions and assertions much more stable and simple. It wraps both UiObject and UiObject2.","sidebar":"tutorialSidebar"},"android/webview":{"id":"android/webview","title":"WebView","description":"There are 3 different objects to interact with.","sidebar":"tutorialSidebar"},"common/allure":{"id":"common/allure","title":"Allure","description":"Ultron can generate artifacts for Allure report only for Android UI tests.","sidebar":"tutorialSidebar"},"common/boolean":{"id":"common/boolean","title":"Boolean result","description":"While using the Ultron framework you always can get the result of any operation as boolean value.","sidebar":"tutorialSidebar"},"common/customassertion":{"id":"common/customassertion","title":"Custom assertions","description":"Our applications are not perfect. It\'s often happens, that some action has no result. Mostly, this","sidebar":"tutorialSidebar"},"common/extension":{"id":"common/extension","title":"Ultron Extension","description":"Ultron leverages the power of Kotlin extension functions.","sidebar":"tutorialSidebar"},"common/listeners":{"id":"common/listeners","title":"Listeners","description":"The framework has 2 types of listeners: UltronLifecycleListener & UltronRunListener","sidebar":"tutorialSidebar"},"common/resulthandler":{"id":"common/resulthandler","title":"Result handler","description":"Ultron allows you to process the result of any operation in your own custom way. It provides full info to do that.","sidebar":"tutorialSidebar"},"common/uiblock":{"id":"common/uiblock","title":"UI Block","description":"UI blocks are a powerful tool for describing and interacting with user interface elements. They allow you to define UI elements within the context of their parent blocks, rather than the entire screen, which makes tests more readable, maintainable, and reliable.","sidebar":"tutorialSidebar"},"common/ultrontest":{"id":"common/ultrontest","title":"UltronTest","description":"UltronTest is a powerful base class provided by the Ultron framework that enables the definition of common preconditions and postconditions for tests. By extending this class, you can streamline test setup and teardown, ensuring consistent execution across your test suite.","sidebar":"tutorialSidebar"},"compose/android":{"id":"compose/android","title":"Android","description":"Note: it\'s possible to use Multiplatform approach using methods runComposeUiTest and runUltronUiTest for Android UI tests.","sidebar":"tutorialSidebar"},"compose/api":{"id":"compose/api","title":"Ultron Compose API","description":"The framework provides an extended API for Compose UI testing. Basically, it\'s available for SemanticsMatcher object. It could be created by functions like hasTestTag(),  hasText() and etc.","sidebar":"tutorialSidebar"},"compose/index":{"id":"compose/index","title":"Compose","description":"There are two types of UI tests you can write with Compose.","sidebar":"tutorialSidebar"},"compose/lazylist":{"id":"compose/lazylist","title":"LazyList","description":"Ultron LazyColumn/LazyRow","sidebar":"tutorialSidebar"},"compose/multiplatform":{"id":"compose/multiplatform","title":"Multiplatform","description":"Multiplatform support is in Alpha state.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Introduction","description":"Docusaurus themed imageDocusaurus themed image","sidebar":"tutorialSidebar"},"intro/configuration":{"id":"intro/configuration","title":"Configuration","description":"Each library of the framework has it\'s own config onject.","sidebar":"tutorialSidebar"},"intro/connect":{"id":"intro/connect","title":"Connect to project","description":"The framework has three libraries that could be added as dependencies.","sidebar":"tutorialSidebar"},"intro/dependencies":{"id":"intro/dependencies","title":"Dependencies Management","description":"Ultron provides all the required dependencies in a transitive manner. That means you don\'t need to specify the Espresso or UI Automator library in your dependencies section in most cases.","sidebar":"tutorialSidebar"}}}}')}}]);