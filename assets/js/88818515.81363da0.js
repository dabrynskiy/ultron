"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[21],{3546:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=n(4848),i=n(8453);const r={sidebar_position:2},o="WebView",l={id:"android/webview",title:"WebView",description:"There are 3 different objects to interact with.",source:"@site/docs/android/webview.md",sourceDirName:"android",slug:"/android/webview",permalink:"/ultron/docs/android/webview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Espresso",permalink:"/ultron/docs/android/espress"},next:{title:"RecyclerView",permalink:"/ultron/docs/android/recyclerview"}},a={},c=[{value:"How to use?",id:"how-to-use",level:2},{value:"UltronWebDocument",id:"ultronwebdocument",level:3},{value:"UltronWebElement",id:"ultronwebelement",level:3},{value:"UltronWebElements",id:"ultronwebelements",level:3},{value:"Boolean operation result",id:"boolean-operation-result",level:2},{value:"Best practice",id:"best-practice",level:2},{value:"Extend framework with your own Web operations",id:"extend-framework-with-your-own-web-operations",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"webview",children:"WebView"}),"\n",(0,s.jsx)(t.p,{children:"There are 3 different objects to interact with."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"UltronWebDocument"})," - wraps operations with WebView DOM document (execute JS script and etc)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"UltronWebElement"})," - represents a DOM element. Provides operations with element (",(0,s.jsx)(t.code,{children:"webClick"}),", ",(0,s.jsx)(t.code,{children:"replaceText"}),", ",(0,s.jsx)(t.code,{children:"exists"})," etc)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"UltronWebElements"})," - represents a list of similar WebElements."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"how-to-use",children:"How to use?"}),"\n",(0,s.jsx)(t.h3,{id:"ultronwebdocument",children:"UltronWebDocument"}),"\n",(0,s.jsx)(t.p,{children:"It contains a set of static methods. For example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:'UltronWebDocument.evalJS("document.getElementById(\\"title\\").innerHTML = \'$title\';")\nUltronWebDocument.assertThat(\n            webContent(\n                elementById(\n                    "apple_link",\n                    withTextContent("Apple")\n                )\n            )\n        )\n'})}),"\n",(0,s.jsx)(t.p,{children:"Full list:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"forceJavascriptEnabled(webViewMatcher, timeoutMs, ..)            // performs a force enable of Javascript on a WebView\nevalJS(script: String, webViewMatcher, timeoutMs, ..)            // evaluate JS on webView\nassertThat(WebAssertion, webViewMatcher, ..)                     // use any webAssertion to assert it safely\nselectActiveElement(..): ElementReference                        // finds the currently active element in the document\nselectFrameByIndex(index: Int, ..): WindowReference              // selects a subframe of the currently selected window by it's index\nselectFrameByIdOrName(idOrName: String, ..): WindowReference     // selects a subframe of the current window by it's name or id\n"})}),"\n",(0,s.jsx)(t.h3,{id:"ultronwebelement",children:"UltronWebElement"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"UltronWebElement"})," has a list of factory methods that help us to create an instance of UltronWebElement. Full list is here - ",(0,s.jsx)(t.a,{href:"https://github.com/open-tool/ultron/blob/603150ab12a703a19245ad08a48b036ce562dfd8/ultron/src/main/java/com/atiurin/ultron/core/espressoweb/webelement/UltronWebElement.kt#L311",children:"UltronWebElement"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:'import com.atiurin.ultron.core.espressoweb.webelement.UltronWebElement.Companion.id\n//other imports\n\nid("text_input").webKeys("Ultron")\nclassName("css_button").webClick()\nxpath("some_xpath_link").hasAttribute("href", "https://github.com/alex-tiurin/ultron")\n'})}),"\n",(0,s.jsxs)(t.p,{children:["It's preferable to use ",(0,s.jsx)(t.code,{children:"id"})," or ",(0,s.jsx)(t.code,{children:"xpath"})," to create ",(0,s.jsx)(t.code,{children:"UltronWebElement"})," instance because they provide very profitable method ",(0,s.jsx)(t.code,{children:"hasAttribute"})]}),"\n",(0,s.jsx)(t.p,{children:"Full operations list"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:'//actions\nclearElement()                                // clears content from an editable element\nreplaceText(String)                           // simulates javascript clear and key events sent to a certain element\nwebKeys(String)                               // simulates javascript key events sent to a certain element\ngetText()                                     // returns the visible text beneath a given DOM element\nwebScrollIntoView()                           // executes scroll to view\nwebScrollIntoViewBoolean()                    // returns if the desired element is in view after scrolling\nwebClick()                                    // simulates the javascript events to click on a particular element\n\n//assertions\ncontainsText(String)                          // asserts that DOM element contains visible text beneath it self \nexists()                                      // asserts that element exists in webView\nhasText(String)                               // asserts that DOM element has visible text beneath it self\nhasAttribute(String, Matcher<String>)         // assert any html attribute value\nassertThat(WebAssertion)                      // use any webAssertion to assert it safely \n\nisSuccess(block: UltronWebElement.() -> Unit) // transforms any action or assertion to Boolean value \nreset()                                       // removes the Element and Window references from this interaction\n//------ general ------ \nwithTimeout(timeoutMs: Long)                  // set custom timeout\nwithResultHandler(resultHandlerBlock)         // provides the ability to process operation result in custom way\nwithContextual(UltronWebElement)              // set a parent element\nwithAssertion(assertion: OperationAssertion)  // define custom assertion of action success\nwithAssertion(name: String = "", isListened: Boolean = false, block: () -> Unit)\n'})}),"\n",(0,s.jsx)(t.h3,{id:"ultronwebelements",children:"UltronWebElements"}),"\n",(0,s.jsx)(t.p,{children:"It helps to find similar elements."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:'classNames("link").getElements()\n   .find { ultronWebElement ->\n        ultronWebElement.isSuccess {\n            withTimeout(100).hasText("Apple")\n        }\n   }?.webClick()\n'})}),"\n",(0,s.jsx)(t.p,{children:"It has only 2 usable methods"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"getElements(): List<UltronWebElement>\ngetSize(): Int\n"})}),"\n",(0,s.jsx)(t.h2,{id:"boolean-operation-result",children:"Boolean operation result"}),"\n",(0,s.jsxs)(t.p,{children:["There is ",(0,s.jsx)(t.code,{children:"isSuccess"})," method that allows us to get the result of any operation as boolean value. In case of false it could be executed to long (5 sec by default). So it reasonable to specify custom timeout for some operations."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:'val isWebElementExist = xpath("some_xpath").isSuccess { withTimeout(2_000).exists() }\nif (isWebElementExist) {\n    //do some reasonable actions\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"best-practice",children:"Best practice"}),"\n",(0,s.jsx)(t.p,{children:"Specify web elements as properties of PageObject class."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:'object WebViewPage : Page<WebViewPage>() {\n    private val button = id("button")\n    private val textInput = id("text_input")\n    private val title = xpath("some_xpath")\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Use this properties in page steps"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"object WebViewPage : Page<WebViewPage>() {\n    //page elements\n    fun someUserStepOnWebView(expectedEventText: String){\n         textInput.replaceText(expectedEventText)\n         button.webClick()\n         title.hasText(expectedEventText)\n    }\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"extend-framework-with-your-own-web-operations",children:"Extend framework with your own Web operations"}),"\n",(0,s.jsxs)(t.p,{children:["It's described in another page ",(0,s.jsx)(t.a,{href:"/ultron/docs/common/extension#espresso-web",children:"here"})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);