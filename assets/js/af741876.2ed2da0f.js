"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[391],{89:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=n(4848),i=n(8453);const s={sidebar_position:4},r="UI Automator",a={id:"android/uiautomator",title:"UI Automator",description:"Ultron makes UI Automator actions and assertions much more stable and simple. It wraps both UiObject and UiObject2.",source:"@site/docs/android/uiautomator.md",sourceDirName:"android",slug:"/android/uiautomator",permalink:"/ultron/docs/android/uiautomator",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"RecyclerView",permalink:"/ultron/docs/android/recyclerview"},next:{title:"withSuitableRoot",permalink:"/ultron/docs/android/rootview"}},c={},l=[{value:"<code>UltronUiObject2</code> api",id:"ultronuiobject2-api",level:2},{value:"<code>UltronUiObject</code> api",id:"ultronuiobject-api",level:2},{value:"Best practice",id:"best-practice",level:2},{value:"Custom timeout for any operation",id:"custom-timeout-for-any-operation",level:2},{value:"Boolean operation result",id:"boolean-operation-result",level:2},{value:"Extend framework with your own action and assertion",id:"extend-framework-with-your-own-action-and-assertion",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"ui-automator",children:"UI Automator"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Ultron"})," makes UI Automator actions and assertions much more stable and simple. It wraps both UiObject and UiObject2."]}),"\n",(0,o.jsx)(t.h1,{id:"speed-up-all-ui-automator-operations",children:"Speed up all UI Automator operations"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Ultron"})," operation could be significantly faster then UI Automator one. To accelerate all operations add single line of code in tests precondition."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"@BeforeClass\n@JvmStatic\nfun speedUpAutomator() {\n    UltronConfig.UiAutomator.speedUp()\n    //or apply the config\n    UltronConfig.apply {\n        accelerateUiAutomator = true\n    }\n}\n"})}),"\n",(0,o.jsx)(t.h1,{id:"how-to-use",children:"How to use?"}),"\n",(0,o.jsx)(t.p,{children:"Compare following code snippets."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"UI Automator"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:'val device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation())\ndevice.wait(\n    Until.findObject(\n        By.res("com.atiurin.sampleapp:id", "button1")\n    ), 5_000\n).click()\nval uiObject2 = device.wait(\n    Until.findObject(\n        By.res("com.atiurin.sampleapp:id", "last_event_status")\n    ), 5_000\n)\nuiObject2.text = "Ultron"\nAssert.assertEquals("Ultron", uiObject2.text)\n'})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.em,{children:"Ultron"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:'byResId(R.id.button1).click()\nbyResId(R.id.last_event_status).replaceText("Ultron").hasText("Ultron")\n'})}),"\n",(0,o.jsx)(t.p,{children:"The last one looks a little bit better :)"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"byResId(R.id.button1)"})," actually returns ",(0,o.jsx)(t.code,{children:"UltronUiObject2"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"While the framework tries to execute UI Automator operation, it catches a list of specified exceptions and tries to repeat the operation during the timeout (5 seconds by default). Of course, you are able to customize the list of processed exceptions. It is also possible to specify a custom timeout for any operation. The configuration process for this part of the framework is explained below."}),"\n",(0,o.jsxs)(t.h2,{id:"ultronuiobject2-api",children:[(0,o.jsx)(t.code,{children:"UltronUiObject2"})," api"]}),"\n",(0,o.jsxs)(t.p,{children:["There are factory methods to create ",(0,o.jsx)(t.code,{children:"UltronUiObject2"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:'byResId(@IntegerRes resourceId: Int): UltronUiObject2 // specify element with target application resourceId\nby(bySelector: BySelector): UltronUiObject2           // eg by(By.res("com.android.camera2","shutter_button"))\n'})}),"\n",(0,o.jsx)(t.p,{children:"To describe UI element with text or content description use following approach"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:'val textElement = by(By.text("some text"))\nval contentDescElement = by(By.desc("Content desc"))\n'})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"UltronUiObject2"})," has all methods of standart UiObject2 and also provide a lot of new features."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"// data providers\ngetParent(): UltronUiObject2?                  // return this object's parent, or null if it has no parent\ngetChildren(): List<UltronUiObject2>           // return a collection of the child elements directly under this object. Empty list if no child exist\ngetChildCount(): Int\nfindObject(bySelector: BySelector): UltronUiObject2? // searches all elements under this object and returns the first object to match the criteria\nfindObjects(bySelector: BySelector): List<UltronUiObject2>  // searches all elements under this object and returns all objects that match the criteria\ngetApplicationPackage(): String?               // return the package name of the app that this object belongs to\ngetText(): String?                             // return view.text or null if view has no text\ngetClassName(): String                         // return the class name of the view represented by this object\ngetVisibleBounds(): Rect?                      // return the visible bounds of this object in screen coordinates\ngetVisibleCenter(): Point?                     // return a point in the center of the visible bounds of this object\ngetResourceName(): String?                     // return the fully qualified resource name for this object's id\ngetContentDescription(): String?               // return the content description for this object\n\n//actions\nclick(duration: Long = 0)                      // A basic click is a touch down and touch up over the same point with no delay.\nlongClick()\nclear()                                        // Clears the text content if object is an editable field\naddText(text: String)                          // Add the text content if object is an editable field\nlegacySetText(text: String)                    // Set the text content by sending individual key codes\nreplaceText(text: String)                      // Set the text content if object is an editable field\ndrag(dest: Point, speed: Int = DEFAULT_DRAG_SPEED) // Drags object to the specified location\npinchClose(percent: Float, speed: Int = DEFAULT_PINCH_SPEED) // Performs a pinch close gesture on this object\nswipe(direction: Direction, percent: Float, speed: Int = DEFAULT_SWIPE_SPEED) // Performs a swipe gesture on this object\nswipeUp()\nswipeDown()\nswipeLeft()\nswipeRight()\nscroll(direction: Direction, percent: Float, speed: Int = DEFAULT_SCROLL_SPEED) // Performs a scroll gesture on this object\nscrollUp()\nscrollDown()\nscrollLeft()\nscrollRight()\nfling(direction: Direction, speed: Int = DEFAULT_FLING_SPEED)         // Performs a fling gesture on this object\nperform(actionBlock: UiObject2.() -> Unit, actionDescription: String) // custom action on UiObject2\n\n//asserts\nhasText(textMatcher: Matcher<String>)\nhasText(text: String)\ntextContains(textSubstring: String)\ntextIsNullOrEmpty()\ntextIsNotNullOrEmpty()\nhasContentDescription(contentDescMatcher: Matcher<String>)\nhasContentDescription(contentDesc: String)\ncontentDescriptionContains(contentDescSubstring: String)\ncontentDescriptionIsNullOrEmpty()\ncontentDescriptionIsNotNullOrEmpty()\nisCheckable()\nisNotCheckable()\nisChecked()\nisNotChecked()\nisClickable()\nisNotClickable()\nisEnabled()\nisNotEnabled()\nisFocusable()\nisNotFocusable()\nisFocused()\nisNotFocused()\nisLongClickable()\nisNotLongClickable()\nisScrollable()\nisNotScrollable()\nisSelected()\nisNotSelected()\nisDisplayed()\nisNotDisplayed()\nassertThat(assertBlock: UiObject2.() -> Boolean, assertionDescription: String) // custom assertion of UiObject2\n\n//------ general ------ \nwithTimeout(timeoutMs: Long)                     // set custom timeout for operations\nwithResultHandler(resultHandlerBlock)            // set custom result handler and process operation result \nwithAssertion(assertion: OperationAssertion)     // define custom assertion of action success\nwithAssertion(name: String = \"\", isListened: Boolean = false, block: () -> Unit)\n"})}),"\n",(0,o.jsxs)(t.h2,{id:"ultronuiobject-api",children:[(0,o.jsx)(t.code,{children:"UltronUiObject"})," api"]}),"\n",(0,o.jsxs)(t.p,{children:["As it was mentioned before ",(0,o.jsx)(t.strong,{children:"Ultron"})," wraps UiObject too. There is a set of static methods to create ",(0,o.jsx)(t.code,{children:"UltronUiObject"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"uiResId(@IntegerRes resourceId: Int): UltronUiObject // specify element with target application resourceId\nui(uiSelector: UiSelector): UltronUiObject\n"})}),"\n",(0,o.jsxs)(t.p,{children:["It has all methods of standart UiObject and also provide a lot of new features. As ",(0,o.jsx)(t.code,{children:"UltronUiObject"})," has almost the same api as ",(0,o.jsx)(t.code,{children:"UltronUiObject2"})," we don't list it."]}),"\n",(0,o.jsx)(t.h2,{id:"best-practice",children:"Best practice"}),"\n",(0,o.jsx)(t.p,{children:"Specify page elements as properties of PageObject class."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"object SomePage : Page<SomePage>() {\n    private val button = byResId(R.id.button1)\n    private val eventStatus = byResId(R.id.last_event_status)\n}\n"})}),"\n",(0,o.jsx)(t.p,{children:"Use this properties in page steps"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"object SomePage : Page<SomePage>() {\n    //page elements\n    fun someUserStepOnPage(expectedEventText: String){\n         button.click()\n         eventStatus.hasText(expectedEventText)\n    }\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"custom-timeout-for-any-operation",children:"Custom timeout for any operation"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"byResId(R.id.last_event_status).withTimeout(10_000).isDisplayed()\n"})}),"\n",(0,o.jsx)(t.p,{children:"There are 2 ways of using custom timeout:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Specify it for page property and it will be applied for all operations with this element"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"object SomePage : Page<SomePage>() {\n    private val eventStatus = byResId(R.id.last_event_status).withTimeout(10_000)\n}\n"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Specify it inside special step there the element operation could take more time. This timeout value will be applied only once for single operation."}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"object SomePage : Page<SomePage>() {\n    fun someLongUserStep(expectedEventText: String){\n         longRequestButton.click()\n         eventStatus.withTimeout(20_000).hasText(expectedEventText)\n    }\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"boolean-operation-result",children:"Boolean operation result"}),"\n",(0,o.jsxs)(t.p,{children:["There is ",(0,o.jsx)(t.code,{children:"isSuccess"})," method that allows us to get the result of any operation as boolean value. In case of false it could be executed to long (5 sec by default). So it's resonable to specify custom timeout for some operations."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-kotlin",children:"val isButtonDisplayed = byResId(R.id.button).isSuccess { withTimeout(2_000).isDisplayed() }\nif (isButtonDisplayed) {\n    //do some reasonable actions\n}\n"})}),"\n",(0,o.jsx)(t.h2,{id:"extend-framework-with-your-own-action-and-assertion",children:"Extend framework with your own action and assertion"}),"\n",(0,o.jsxs)(t.p,{children:["It's described in another page ",(0,o.jsx)(t.a,{href:"/ultron/docs/common/extension#ui-automator",children:"here"})]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);